# Copyright 2018 The Hafnium Authors.
#
# Use of this source code is governed by a BSD-style
# license that can be found in the LICENSE file or at
# https://opensource.org/licenses/BSD-3-Clause.

import("//build/toolchain/platform.gni")
import("//test/hftest/args.gni")

config("hftest_config") {
  include_dirs = [ "//test/inc" ]

  if (hftest_optimize_for_size == true) {
    defines = [ "HFTEST_OPTIMIZE_FOR_SIZE" ]
  }
}

# Testing framework for a primary VM.
source_set("hftest_primary_vm") {
  testonly = true

  public_configs = [ ":hftest_config" ]

  deps = [
    ":hftest_standalone",
    "//vmlib/${plat_arch}:call",
  ]
}

# Testing framework for a secondary VM. It's currently just a slave VM and
# can't affect the tests directly.
source_set("hftest_secondary_vm") {
  testonly = true

  public_configs = [ ":hftest_config" ]

  sources = [
    "service.c",
  ]

  deps = [
    ":mm",
    ":power_mgmt",
    "//src:dlog",
    "//src:memiter",
    "//src:panic",
    "//src:std",
    "//src/arch/${plat_arch}:entry",
    "//src/arch/${plat_arch}/hftest:entry",
    "//src/arch/${plat_arch}/hftest:power_mgmt",
    "//vmlib/${plat_arch}:call",
  ]
}

# Testing framework for a hypervisor.
source_set("hftest_hypervisor") {
  testonly = true
  public_configs = [ ":hftest_config" ]
  deps = [
    ":hftest_standalone",
  ]
}

# Testing framework for tests running under Linux in the primary VM.
source_set("hftest_linux") {
  testonly = true
  public_configs = [ ":hftest_config" ]

  sources = [
    "linux_main.c",
  ]

  deps = [
    ":common",
    "//src:dlog",
    "//src:memiter",
    "//src/arch/${plat_arch}/hftest:power_mgmt",
  ]
}

source_set("hftest_standalone") {
  visibility = [ ":*" ]
  testonly = true

  public_configs = [ ":hftest_config" ]

  sources = [
    "standalone_main.c",
  ]

  deps = [
    ":common",
    ":mm",
    ":power_mgmt",
    "//src:dlog",
    "//src:memiter",
    "//src/arch/${plat_arch}:entry",
    "//src/arch/${plat_arch}/hftest:entry",
    "//src/arch/${plat_arch}/hftest:interrupts",
    "//src/arch/${plat_arch}/hftest:power_mgmt",
    hftest_ctrl,
    hftest_device,
  ]
}

# Common code for hftest, whether it is running under Linux, under Hafnium in
# the primary VM, or directly on the hardware.
source_set("common") {
  visibility = [ ":*" ]
  testonly = true
  public_configs = [ ":hftest_config" ]
  sources = [
    "common.c",
  ]
  deps = [
    "//src:fdt_handler",
    "//src:memiter",
    "//src:panic",
    "//src:std",
  ]
}

source_set("device_psci") {
  testonly = true

  public_configs = [ ":hftest_config" ]

  sources = [
    "device_psci.c",
  ]

  deps = [
    "//src/arch/${plat_arch}/hftest:power_mgmt",
  ]
}

source_set("mm") {
  testonly = true

  public_configs = [ ":hftest_config" ]

  sources = [
    "mm.c",
  ]

  deps = [
    "//src:layout",
    "//src:mm",
    "//src/arch/${plat_arch}:arch",
    "//src/arch/${plat_arch}/hftest:mm",
  ]
}

source_set("power_mgmt") {
  testonly = true

  public_configs = [ ":hftest_config" ]

  sources = [
    "power_mgmt.c",
  ]

  deps = [
    ":mm",
    "//src/arch/${plat_arch}/hftest:power_mgmt",
  ]
}

source_set("ctrl_fdt") {
  testonly = true

  public_configs = [ ":hftest_config" ]

  sources = [
    "ctrl_fdt.c",
  ]

  deps = [
    "//src:dlog",
    "//src:fdt",
    "//src:memiter",
  ]
}

source_set("ctrl_uart") {
  testonly = true

  public_configs = [ ":hftest_config" ]

  sources = [
    "ctrl_uart.c",
  ]

  deps = [
    "//src:dlog",
    "//src:memiter",
    hftest_device,
    plat_console,
  ]
}
