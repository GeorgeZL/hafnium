# Copyright 2021 The Hafnium Authors.
#
# Use of this source code is governed by a BSD-style
# license that can be found in the LICENSE file or at
# https://opensource.org/licenses/BSD-3-Clause.

import("//build/image/image.gni")
import("//test/hftest/args.gni")
import("//src/arch/aarch64/args.gni")

# VM that will control execution of tests in a VM-to-SP set-up
vm_kernel("vm_primary") {
  testonly = true
  public_configs = [
    "services:config",
    "//src/arch/aarch64:arch_config",
  ]

  sources = [
    "dir_msg.c",
    "notifications.c",
    "power_mgt.c",
    "setup_and_discovery.c",
  ]

  deps = [
    "//src/arch/${plat_arch}/hftest:power_mgmt",
    "//test/hftest:hftest_primary_vm",
    "//test/vmapi/common:common",
  ]
}

# SP that will be controlled via communication/scheduling primitives by the
# former SP
vm_kernel("secure_partitions_services") {
  testonly = true
  public_configs = [ "services:config" ]

  deps = [
    "services:message_loop",
    "services:notifications",
    "services:partition_services",
    "//test/hftest:hftest_secure_service",
  ]
}

manifest("secure_partition_services_manifest") {
  source = "partition_manifest_services_sp.dts"
  output = "partition_manifest_services_sp.dtb"
}

manifest("secure_partition_services_secondary_manifest") {
  source = "partition_manifest_services_secondary_sp.dts"
  output = "partition_manifest_services_secondary_sp.dtb"
}

partition_package("secure_partition_control_test_package") {
  testonly = true
  files = [ [
        "partition_manifest_control_sp.dtb",
        "secure_partitions_control.bin",
        ":partition_manifest_control_sp",
        ":secure_partitions_control",
      ] ]
  output = "secure_partition_control_test_package.img"
}

partition_package("secure_partition_services_test_package") {
  testonly = true
  files = [ [
        "partition_manifest_services_sp.dtb",
        "secure_partitions_services.bin",
        ":secure_partition_services_manifest",
        ":secure_partitions_services",
      ] ]
  output = "secure_partition_services_test_package.img"
}

partition_package("secure_partition_services_secondary_test_package") {
  testonly = true
  files = [ [
        "partition_manifest_services_secondary_sp.dtb",
        "secure_partitions_services.bin",
        ":secure_partition_services_secondary_manifest",
        ":secure_partitions_services",
      ] ]
  output = "secure_partition_services_secondary_test_package.img"
}

manifest("vm_primary_manifest") {
  source = "partition_manifest_nwd_primary.dts"
  output = "partition_manifest_nwd_primary.dtb"
}

partition_package("vm_primary_test_package") {
  testonly = true
  files = [ [
        "partition_manifest_nwd_primary.dtb",
        "vm_primary.bin",
        ":vm_primary_manifest",
        ":vm_primary",
      ] ]
  output = "vm_primary_test_package.img"
}

vm_kernel("sel0_partition") {
  testonly = true

  deps = [
    "services:message_loop",
    "services:notifications",
    "services:partition_services",
    "//test/hftest:hftest_sel0_partition_base",
  ]
}

manifest("partition_manifest_services_tertiary_sel0_sp") {
  source = "partition_manifest_services_tertiary_sel0_sp.dts"
  output = "partition_manifest_services_tertiary_sel0_sp.dtb"
}

partition_package("sel0_sp_test_package") {
  testonly = true
  files = [ [
        "partition_manifest_services_tertiary_sel0_sp.dtb",
        "sel0_partition.bin",
        ":partition_manifest_services_tertiary_sel0_sp",
        ":sel0_partition",
      ] ]
  output = "sel0_sp_test_package.img"
}

partitions_json("ffa_both_world_partitions_vhe_test") {
  testonly = true

  sps = [
    [
      "sel0_sp_test_package.img",
      "manifest_services_tertiary_sel0_sp.dts",
      ":sel0_sp_test_package",
      ":partition_manifest_services_tertiary_sel0_sp",
    ],
    [
      "secure_partition_services_secondary_test_package.img",
      "manifest_services_secondary_sp.dts",
      ":secure_partition_services_secondary_test_package",
      ":secure_partition_services_secondary_manifest",
    ],
  ]

  vms = [ [
        "vm_primary_test_package.img",
        "manifest.dts",
        ":vm_primary_test_package",
        ":vm_primary_test_package",
      ] ]

  json_file = "ffa_both_world_partitions_vhe_test.json"
}

partitions_json("ffa_both_world_partitions_test") {
  testonly = true

  sps = [
    [
      "secure_partition_services_test_package.img",
      "manifest_services_sp.dts",
      ":secure_partition_services_test_package",
      ":secure_partition_services_manifest",
    ],
    [
      "secure_partition_services_secondary_test_package.img",
      "manifest_services_secondary_sp.dts",
      ":secure_partition_services_secondary_test_package",
      ":secure_partition_services_secondary_manifest",
    ],
  ]

  vms = [ [
        "vm_primary_test_package.img",
        "manifest.dts",
        ":vm_primary_test_package",
        ":vm_primary_test_package",
      ] ]

  json_file = "ffa_both_world_partitions_test.json"
}
